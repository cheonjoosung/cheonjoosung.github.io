---
layout: post
title:  "Codeground 좋은수"
date:   2017-07-24
categories: algorithm
highlight: false
image: /images/it/algorithm/algo.jpg
tag: algorithm
---

 `CodeGround 의 좋은 수 풀이에 관한 포스팅입니다.` 저의 경우 문제의 해결 방법을 찾는게 생각보다 쉽지 않았어요. 알고리즘 문제를 많이 접해보지 않아서인지 그냥 생각이 안나는건지 모르겠지만 ㅠㅠ 더 분발을 해야겠다는 마음을 가지게 만드네요. 코드그라운드 너무 사랑스러움 !!! 알고리즘 푸는 재미가 쏠쏠!!!!!!

<br><b>1) `주어진 문제를 풀이`</b><br>
<p>=) 1) | 배열의 값 | <= 10만. 즉, 음수도 포함이므로 -10만 <= 값 <= 10만  </p>
<p>=) 2) i 번째의 수가 좋은 수가 되는 조건은 0 ~ i-1 번째 수 중 3개의 수(똑같은 숫자 선택 가능)를 더해서 i번째의 값이 나와야 함</p>
<p>=) 2-1) a+a+a or 2*a+b or a+b+c 로 나누어서 풀 수도 있지만 음수가 있으면 해당 방법은 적용하기 어려워요? 불가능?</b></p>
<p>=) 2-2) 0 ~ i-1 번째까지 수 중 2개의 수를 더해서 배열에 저장을 해놓고 i번째 수 - (0 to i-1 수중 하나 선택) 한 값이 방금전의 구한 2개의 수를 더한 값의 배열에 존재한다면 좋은 수라고 판단내릴 수 있다. </p>
<p>=) 2-3) 한가지 더, 두수를 더한 값이 -20만(-10만-10만) to 20만(10만+10만) 이므로 두수를 더한 값을 저장하는 배열 사이즈는 40만+1 이 된다.</p>

<br><b>2) `이제 정리된 문제를 코딩으로 옮기기`</b><br>
<p>=) 1) 먼저 더한 값을 저장한 배열 선언 Size : 40만+1 </p>
<p>=) 2) b < a 탐색하면서 b-a 의 차가 배열 p(두 수의 합을 저장한 배열) 의 존재여부 체크</p>
<p>=) 3) 마지막 포문에서는 b= 0 to a 까지 두 수의 합을 더해서 배열 p 에 저장 </p>

{% highlight ruby %}
for (test_case = 1; test_case <= T; test_case++) {
  Answer = 0;

  int n = sc.nextInt();
  int[] num = new int[n];

  for(int i=0; i<n; i++){
    num[i] = sc.nextInt();
  }

  int[] p = new int[400001]; //범위가 -20만 ~ 20만 이므로 -10+-10만 은 -20만

  for(int a=0 ; a<n ; a++) {
    boolean found = false;

    for(int b=0; b<a && !found ; b++) {
      if(p[num[a]-num[b] + 200000] == 1) {
        // 좋은 수 예정자 a 와 어떤 수 b 와의 차이가 p[] 배열중 어떤 두수의 합으로 된적이 있다면 발견이 된 거임
        // 결국 좋은 수는 = b + (a-b) 의 차가 됨. 여기서 b는 존재하므로 (a-b) 의 값이 이전의 두수의 합으로 이루어진지만 체크하면 됨
        found = true;
      }
    }

    for(int b=0; b<=a ; b++) {
      p[num[a]+num[b]+200000] = 1; //더한값의 배열이 존재하면 1
    }

    if(found) Answer++;
  }
}
{% endhighlight %}

<br><b>3) `다른 정리`</b><br>
<p>=) 1) 재귀를 이용하면 더 쉽게 구현을 할 수 있으나, 스택오버가 나면서 뻗어버립니다.</p>
<p>=) 2) 거울수를 체크하기 위해 arrWater 이중배열을 사용했지만 다른방법을 사용해도 될 것 같습니다.</p>

`코드그라운드 문제 풀이를 공유하는 것이 문제가 되면 바로 삭제하도록 하겠습니다. 풀이에 대해 이해가 안되는 것은 메일을 통해 전달 부탁드립니다. 그게 제일 빨라요`
